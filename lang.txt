强类型语言 yuan-lang

Note:
	1、lexical language
	2、单继承
	3、一切以类为基础

语法：
	类型有：int8, uint8, int16, uint16, int32, uint32, float32, float64, string, bool, fn, void

	声明变量：int32 a = 100, b = 101; int32 i, b, c;

	控制语句：
			if (condition (&&... | || ...)) statement | { statement ... } else | else if (condition) ...
			for (int32 i = 0; i < 100; ++i) statement | { statement ... }
			for (type var : container) statement | { statement ... }
			do { statement ... } while(condition);
			while (condition ...) statement | { statement ... | break | continue }
			switch (var) { case number: {} | statement ... case number ... default: ...}
		
	函数声明：
			private ? return_type function_name(var decl ...) { statement ... | return ... }
	
	类声明：
			export ? class class_name extends father_class | interface {
				private ? type var_name expr;
			}

关键字：
	import, from, this, super, int8, uint8, int16, uint16, int32, uint32, int64, uint64, float32, float64, string, bool, void, if, else, for, do, while, switch, case, default, 
	break, continue, return, private, protected, public, static, class, interface, extends, fn, goto, native, enum, new

操作符：
	+, -, *, /, %, ., ?, :, &, |, ^, ~, &&, ||, !, +=, -=, /=, *=, %=, ~=, ^=, &=, |=, >=, <=, >>, <<, >>=, <<=

示例：

	export class Token
	{
		public Token(int32 a, int32 b) {

		}

		protected uint32 get_check_sum(uint8[] arr)
		{
			return 111;
		}

		private static int32 to_number()
		{
			return hash ^ 0xfffe | 10000;
		}

		public void say()
		{

		}
	}

	export class Test
	{
		public static void main(string[] args)
		{
			Token t = new Token(1, 2);
			t.say();
			Console.println("hello world!!!");
		}
	}


expr: literal | binOp | uOp

stmt: assignStmt | funcCall | funcDecl | varDecl | classDecl | dotExpr | expr

assignStmt: iden '=' ( assignStmt | funcCall | dotExpr | iden | literal | expr )

https://github.com/antlr/grammars-v4.git

